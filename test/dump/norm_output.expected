package Norm

step test2 (input_0 : (bool * bool))
  init : bool, signal : bool = input_0
  tmp_4 : bool = false
  tmp_5 : bool = signal_2
  tmp_6 : bool = tmp_4 fby tmp_5
  tmp_7 : bool = init_1
  tmp_8 : bool = tmp_6
  tmp_9 : bool = tmp_7 fby tmp_8
  out_3 : bool = tmp_9
  in out_3

step test (input_0 : (bool * bool * bool * bool))
  cond : bool, init : bool, signal : bool, default : bool = input_0
  tmp_6 : bool = cond_1
  tmp_13 : bool =
    if tmp_6
    then
      tmp_7 : bool = false
      tmp_8 : bool = signal_3
      tmp_9 : bool = tmp_7 fby tmp_8
      tmp_10 : bool = init_2
      tmp_11 : bool = tmp_9
      tmp_12 : bool = tmp_10 fby tmp_11
      in tmp_12
    else default_4
  out_5 : bool = tmp_13
  in out_5

