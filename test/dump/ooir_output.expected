package Ooir


machine test
memory: first_15 : bool, first_13 : bool
instances: 
reset: first_15 := true; first_13 := true
input: cond_0 : bool, init_1 : bool, signal_2 : bool, default_3 : bool
locals: return_val_17 : bool, out_4 : bool, tmp_12 : bool, tmp_16 : bool,
  tmp_11 : bool, tmp_10 : bool, tmp_9 : bool, tmp_14 : bool, tmp_8 : bool,
  tmp_7 : bool, tmp_6 : bool, tmp_5 : bool
body:
  tmp_5 = cond_0;
  if tmp_5
  then tmp_6 = false; tmp_7 = signal_2; tmp_14 = !first_13;
      if tmp_14 then tmp_8 = tmp_6 else tmp_8 = tmp_7; first_13 := false;
      tmp_9 = init_1; tmp_10 = tmp_8; tmp_16 = !first_15;
      if tmp_16 then tmp_11 = tmp_9 else tmp_11 = tmp_10; first_15 := false;
      tmp_12 = tmp_11
  else tmp_12 = default_3;
  out_4 = tmp_12;
  return_val_17 = out_4;
  return return_val_17

machine test2
memory: first_11 : bool, first_9 : bool
instances: 
reset: first_11 := true; first_9 := true
input: init_0 : bool, signal_1 : bool
locals: return_val_13 : bool, out_2 : bool, tmp_12 : bool, tmp_8 : bool,
  tmp_7 : bool, tmp_6 : bool, tmp_10 : bool, tmp_5 : bool, tmp_4 : bool,
  tmp_3 : bool
body:
  tmp_3 = false;
  tmp_4 = signal_1;
  tmp_10 = !first_9;
  if tmp_10 then tmp_5 = tmp_3 else tmp_5 = tmp_4;
  first_9 := false;
  tmp_6 = init_0;
  tmp_7 = tmp_5;
  tmp_12 = !first_11;
  if tmp_12 then tmp_8 = tmp_6 else tmp_8 = tmp_7;
  first_11 := false;
  out_2 = tmp_8;
  return_val_13 = out_2;
  return return_val_13
