((step fst (a : (1 2)) (b : 1) ((((b : 1) (_ : 2)) (a : (1 2)))))
  (step test_mul ((a : int) (b : int)) (c : int)
    (((c : int) ((* (a : int) (b : int)) : int))))
  (step test_not (a : bool) (b : bool)
    (((b : bool) ((~ (a : bool)) : bool))))
  (step add_tup (a : (int int)) (b : int)
    ((((_ : int) (d : int)) (a : (int int)))
      (((c : int) (_ : int)) (a : (int int)))
      ((b : int) ((+ (c : int) (d : int)) : int))))
  (step test_if ((a : bool) (b : 2) (c : 2)) (d : 2)
    (((d : 2) ((ite (a : bool) (b : 2) (c : 2)) : 2))))
  (step test_add ((a : int) (b : int)) (c : int)
    (((c : int) ((+ (a : int) (b : int)) : int))))
  (step test_and ((a : bool) (b : bool)) (c : bool)
    (((c : bool) ((&& (a : bool) (b : bool)) : bool)))))