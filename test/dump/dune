(rule
 (deps
  (package mimosa))
 (action
  (with-stdout-to
   packdep_output
   (run mimosa dump packdep %{dep:packA.mim} %{dep:packB.mim}))))

(rule
 (alias runtest)
 (package mimosa)
 (action
  (progn
   (diff packdep_output.expected packdep_output))))

(rule
 (deps
  (package mimosa))
 (action
  (with-stderr-to
   cyclic_error
   (run mimosa dump packdep %{dep:cyclicA.mim} %{dep:cyclicB.mim}))))

(rule
 (alias runtest)
 (package mimosa)
 (action
  (progn
   (diff cyclic_error.expected cyclic_error))))

(rule
 (deps
  (package mimosa))
 (action
  (with-stdout-to
   eqorder_output
   (run mimosa dump eqorder %{dep:eqorder.mim}))))

(rule
 (alias runtest)
 (package mimosa)
 (action
  (progn
   (diff eqorder_output.expected eqorder_output))))

(rule
 (deps
  (package mimosa))
 (action
  (with-stdout-to
   type_infer_output
   (run mimosa dump ttree %{dep:type_infer.mim}))))

(rule
 (alias runtest)
 (action
  (progn
   (diff type_infer_output.expected type_infer_output))))

(rule
 (deps
  (package mimosa))
 (action
  (with-stdout-to
   mono_output
   (run mimosa dump mono %{dep:mono.mim}))))

(rule
 (alias runtest)
 (action
  (progn
   (diff mono_output.expected mono_output))))
